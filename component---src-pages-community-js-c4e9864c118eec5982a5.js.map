{"version":3,"sources":["webpack:///./src/components/CommunityEvent/styles.module.css","webpack:///./src/components/CommunityEvent/index.js","webpack:///./src/pages/community.js","webpack:///./src/components/Icon/styles.module.css","webpack:///./src/components/Icon/index.js"],"names":["module","exports","Event","title","description","url","date","location","cancelled","className","styles","EventTitle","Link","href","target","rel","EventLocation","EventDescription","Markdown","source","defaultProps","CommunityPage","data","communityJson","channels","connect","allEventsJson","Section","Text","size","style","marginBottom","map","idx","items","listStyle","justifyContent","length","key","List","item","icon","rest","flexBasis","marginRight","Tile","Icon","src","publicURL","align","column","alt","imgStyle","classnames"],"mappings":"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","file":"component---src-pages-community-js-c4e9864c118eec5982a5.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Event\":\"styles-module--Event--3-Dq3\",\"EventTitle\":\"styles-module--EventTitle--1aYwU\",\"EventLocation\":\"styles-module--EventLocation--3qZ5L\",\"EventDescription\":\"styles-module--EventDescription--HBssN\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./styles.module.css\";\nimport Link from \"../Link\";\nimport Markdown from \"../Markdown\";\n\nconst Event = ({ title, description, url, date, location, cancelled }) => {\n\n    return (\n        <div className={styles.Event}>\n            <div className={styles.EventTitle}>\n                {url ? <Link href={url} target=\"_blank\" rel=\"noopener\">{title}</Link> : title}\n                {cancelled ? \" [CANCELLED]\" : null}\n            </div>\n            <div className={styles.EventLocation}>\n                {`${date} / ${location}`}\n            </div>\n            { description\n                ? <div className={styles.EventDescription}><Markdown source={description} /></div>\n                : null\n            }\n        </div>\n    );\n};\n\nEvent.defaultProps = {\n    description: null,\n    url: null,\n    cancelled: false,\n};\n\nEvent.propTypes = {\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    url: PropTypes.string,\n    date: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    cancelled: PropTypes.bool\n};\n\nexport default Event;\n","import React, { Fragment } from \"react\";\nimport {graphql} from \"gatsby\";\n\nimport Section from \"../components/Section\";\nimport SEO from \"../components/seo\";\nimport Text from \"../components/Text\";\nimport { List, ListItem } from \"../components/List\";\nimport Tile from \"../components/Tile\";\nimport Icon from \"../components/Icon\";\nimport Event from \"../components/CommunityEvent\"\n\n\nconst CommunityPage = ({ data: { communityJson: { title, channels, connect }, allEventsJson } }) => (\n    <>\n        <SEO title={title} />\n        <Section>\n            <Text size=\"1\" style={{ marginBottom: \"var(--default-margin-half)\" }}>{title}</Text>\n            {\n                channels.map(({title, items}, idx, source) => {\n                    const listStyle = {\n                        justifyContent: \"flex-start\"\n                    };\n\n                    if (idx + 1 === source.length) {\n                        listStyle.marginBottom = \"calc(-1 * var(--default-margin-half))\";\n                    }\n\n                    return (\n                        <Fragment key={idx}>\n                            <Text size=\"2\" style={{ marginBottom: \"var(--default-margin-half)\" }}>{title}</Text>\n                            <List style={listStyle}>\n                                {\n                                    items.map((item, idx) => {\n                                        const { icon, ...rest } = item;\n                                        return (\n                                            <ListItem\n                                                key={idx}\n                                                style={{\n                                                    flexBasis: \"170px\",\n                                                    marginRight: \"var(--default-margin-half)\",\n                                                    marginBottom: \"var(--default-margin-half)\",\n                                                }}\n                                            >\n                                                <Tile\n                                                    icon={() => <Icon size=\"120x120\" src={icon.publicURL} />}\n                                                    align=\"center\"\n                                                    {...rest}\n                                                />\n                                            </ListItem>\n                                        );\n                                    })\n                                }\n                            </List>\n                        </Fragment>\n                    );\n                })\n            }\n        </Section>\n        <Section>\n            <Text size=\"2\" style={{ marginBottom: \"var(--default-margin-half)\" }}>{connect.title}</Text>\n            <List column=\"3\" justifyContent=\"spaceBetween\">\n                { connect.items.map(({ icon, ...rest }, idx) => {\n                    return (\n                        <ListItem key={idx}>\n                            <Tile\n                                icon={() => <Icon size=\"96x96\" src={icon.publicURL} />}\n                                {...rest}\n                            />\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Section>\n    </>\n);\n\nexport default CommunityPage;\n\nexport const query = graphql`\n    query {\n        communityJson {\n            title\n            channels {\n                title\n                items {\n                    title\n                    url\n                    icon {\n                        publicURL\n                    }\n                }\n            }\n            connect {\n                title\n                items {\n                    title\n                    description\n                    url\n                    icon {\n                        publicURL\n                    }\n                }\n            }\n        }\n    }\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"styles-module--Icon--IgQVY\",\"size_96x96\":\"styles-module--size_96x96--1w07_\",\"size_120x120\":\"styles-module--size_120x120--1QYU_\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport styles from \"./styles.module.css\";\nimport getCssModifiers from \"../../utils/getCssModifiers\";\n\n\nconst Icon = ({ size, src, alt, style, imgStyle }) => {\n    return (\n        <div\n            className={classnames(\n                styles.Icon,\n                styles[`size_${size}`]\n            )}\n            style={style}\n        >\n            <img src={src} alt={alt} style={imgStyle} />\n        </div>\n    );\n};\n\nIcon.defaultProps = {\n    size: \"96x96\",\n    alt: null,\n    style: null,\n    imgStyle: null,\n};\n\nIcon.propTypes = {\n    size: PropTypes.oneOf(getCssModifiers(styles, \"size\")),\n    alt: PropTypes.string,\n    style: PropTypes.object,\n    imgStyle: PropTypes.object,\n};\n\n\nexport default Icon;"],"sourceRoot":""}